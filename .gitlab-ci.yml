stages:
  - build
  - unit-test
  - dockerize
  - provider-test
  - deploy_to_production

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:
 image: golang:1.17-stretch
 stage: unit-test
 script:
   - go mod download
   - go test -v ./handler

provider_test:
 image: golang:1.17-stretch
 stage: provider-test
 script:
   - apt update
   - apt install -y ruby-full
   - curl -LO https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v1.88.81/pact-1.88.81-linux-x86_64.tar.gz
   - tar xzf pact-1.88.81-linux-x86_64.tar.gz
   - ln -s $(pwd)/pact/bin/pact-provider-verifier /usr/bin
   - pact-provider-verifier --help
   - go mod download
   - go test -run TestProvider ./ -v -count 1

dockerize-job:
  image: docker
  stage: dockerize
  services:
    - docker:dind
  script:
    - docker login -u "mdnsykt" -p "$DOCKER_PASSWORD"
    - docker build -t mdnsykt/go-backend:latest .
    - docker push mdnsykt/go-backend:latest
    - docker logout


deploy:
  stage: deploy_to_production
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H $STAGING_HOST >> ~/.ssh/known_hosts
  script:
    - ssh ec2-user@$STAGING_HOST "cd backend-repo && docker-compose down && docker-compose pull && docker-compose up -d && exit"